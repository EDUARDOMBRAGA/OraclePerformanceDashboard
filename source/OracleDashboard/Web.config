<?xml version="1.0"?><configuration><appSettings><add key="vs:EnableBrowserLink" value="false" /></appSettings><connectionStrings><clear /><!--    Put a connection string with a user who has SYSDBA role. 
    If you cannot use a SYSDBA role, then the user needs to have SELECT grant on the V$ views and some of the DBA tables. 
    Here's how to do it:
    Step 1. You can run this query to first create a ROLE which allows access to the necessary views. 
    
    CREATE ROLE SELECT_VDOLLAR_ROLE;

    BEGIN
        FOR x IN ( SELECT object_name
                     FROM dba_objects
                    WHERE object_type = 'VIEW' 
                      AND object_name LIKE 'V\_$%' ESCAPE '\' )
        LOOP
            EXECUTE IMMEDIATE 'grant select on ' || x.object_name || ' to SELECT_VDOLLAR_ROLE';
        END LOOP;
    END;   
    /
    GRANT SELECT ON dba_scheduler_running_jobs TO SELECT_VDOLLAR_ROLE;
    GRANT SELECT ON dba_objects TO SELECT_VDOLLAR_ROLE;
    GRANT SELECT ON dba_tab_statistics TO SELECT_VDOLLAR_ROLE;
    GRANT SELECT ON dba_data_files TO SELECT_VDOLLAR_ROLE;
    GRANT SELECT ON dba_free_space TO SELECT_VDOLLAR_ROLE;
    GRANT SELECT ON dba_hist_sql_plan TO SELECT_VDOLLAR_ROLE;
    GRANT SELECT ON SYS.AUDIT_ACTIONS TO SELECT_VDOLLAR_ROLE;   
    GRANT SELECT ON ALL_TAB_MODIFICATIONS TO SELECT_VDOLLAR_ROLE;   
    GRANT SELECT ON dba_tables TO SELECT_VDOLLAR_ROLE;   
    GRANT SELECT ON USER_IND_COLUMNS TO SELECT_VDOLLAR_ROLE;   
    
    /
    
    Step 2. Grant this role to the user who will be connecting. 
    GRANT SELECT_VDOLLAR_ROLE TO HR;
    
    Create connection string using EZCONNECT format     
    this format specifies the server and the Oracle     
    service name as the datasource     
    using the format: server/oracle service name     
    no tnsnames.ora or sqlnet.ora file is needed.
	
	Example,
	User Id=TestUser; Password=TestUser123; Data Source=omarlinux.cloudapp.net/xe
    --></connectionStrings><system.web><compilation debug="true" targetFramework="4.0" /><!--             The <authentication> section enables configuration              of the security authentication mode used by              ASP.NET to identify an incoming user.          --><authentication mode="Windows" /><authorization></authorization><!--             The <customErrors> section enables configuration              of what to do if/when an unhandled error occurs              during the execution of a request. Specifically,              it enables developers to configure html error pages              to be displayed in place of a error stack trace.          <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">             <error statusCode="403" redirect="NoAccess.htm" />             <error statusCode="404" redirect="FileNotFound.htm" />         </customErrors>         --><pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" /></system.web><system.data><DbProviderFactories><add name="ODP.NET, Managed Driver" invariant="Oracle.ManagedDataAccess.Client" description="Oracle Data Provider for .NET, Managed Driver" type="Oracle.ManagedDataAccess.Client.OracleClientFactory, Oracle.ManagedDataAccess, Version=4.121.1.0, Culture=neutral, PublicKeyToken=89b483f429c47342" /></DbProviderFactories></system.data></configuration>